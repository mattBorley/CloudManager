name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  source:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for linting the React frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies and run linting for React
      - name: Install dependencies and lint React
        run: |
          cd frontend
          npm install
          npm run lint

      # Set up Python for linting the FastAPI backend
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # Install dependencies and run linting for FastAPI
      - name: Install dependencies and lint FastAPI
        run: |
          cd backend
          pip install -r requirements.txt
          pylint . # Adjust to match your linting rules

  test:
    runs-on: ubuntu-latest
    needs: source
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Run React frontend tests
      - name: Run React tests
        run: |
          cd frontend
          npm install
          npm test -- --ci --silent --maxWorkers=1

      # Run FastAPI backend tests
      - name: Run FastAPI tests
        run: |
          cd backend
          pip install -r requirements.txt
          pytest

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub or another Docker registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image for frontend
      - name: Build and push React frontend Docker image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      # Build and push Docker image for backend
      - name: Build and push FastAPI backend Docker image
        run: |
          cd backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Log in to Docker Hub or another Docker registry
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Pull Docker images and deploy with Docker Compose
      - name: Pull Docker images and deploy
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/webapp-frontend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/webapp-backend:latest
          docker-compose down
          docker-compose up -d
