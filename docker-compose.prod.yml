services:
  # Nginx Reverse Proxy Service
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Expose port 80 for Nginx on the host
    depends_on:
      - frontend  # Ensure the frontend is available
      - backend   # Ensure the backend is available
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf  # Mount your custom Nginx config
      - ./frontend/build:/usr/share/nginx/html  # Serve the React build directory

  # React frontend Service
  frontend:
    image: mattborley02/frontend:latest
    container_name: cloudmanager-frontend-prod
    ports:
      - "3000:80"  # Expose port 3000 on the host machine and map it to port 80 in the container
    depends_on:
      - backend  # Ensure that the backend service is started before the frontend

  # FastAPI backend Service
  backend:
    image: mattborley02/backend:latest
    container_name: cloudmanager-backend-prod
    ports:
      - "8000:8000"  # Expose port 8000 on the host machine and map it to port 8000 in the container
    env_file:
      - .env
    environment:
      DATABASE_URL: mysql+mysqlclient://fastapi_user:faster-AP1-password@db-prod:3306/clouddatabase
    depends_on:
      - db-prod  # Ensure that the MySQL database is available before the backend starts

  # MySQL Database Service
  db-prod:
    image: mysql:8.0
    container_name: db-prod
    environment:
      MYSQL_ROOT_PASSWORD: Docker-2024-Moria-!-
      MYSQL_DATABASE: clouddatabase
      MYSQL_USER: fastapi_user
      MYSQL_PASSWORD: faster-AP1-password
    ports:
      - "3306:3306"  # Expose port 3306 for MySQL database (host:container)
    volumes:
      - mysql-data:/var/lib/mysql  # Use a Docker volume to persist MySQL data between container restarts

volumes:
  mysql-data:  # Define a named volume to store MySQL data persistently
